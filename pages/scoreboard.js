/* import Head from 'next/head'
import Image from 'next/image'
import { useEffect, useState } from 'react'
import {
  collection,
  documentId,
  updateDoc,
  addDoc,
  doc,
  getDocs,
  setDoc,
} from 'firebase/firestore';
import styles from '../styles/Home.module.css'
import { database } from '../firebaseConfig';
import {
  getAuth
}from 'firebase/auth';
export default function Home() {
  const [ID, setID] = useState(null);
  const [ans, setans] = useState('');
  const auth = getAuth();
  const user = auth.currentUser;
  const updateData = () => {
      updateDoc(dataref, { 
        ans2: ans
    })
      .then(() => {
        alert('Data Sent')
        setans('')
      })
      .catch((err) => {
        console.error(err);
      })
      
  }
  const checkValue=() => {
    if (value > 5) {
        return "Value is greater than 5.";
    } else {
        return "Value is not greater than 5.";
    }}
  return (
    <div className={styles.container}>
      <Head>
        <title>Next CRUD AUTH</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>

        <h1> tell me  joke </h1>
        <button 
        className={styles.button}
        onClick={checkValue}>get score</button>
       </main>
    </div>
  );
}
 */
import { useEffect, useState } from 'react'
import {
  collection,
  updateDoc,
  doc,
  getDoc,
  getDocs,
  setDoc,
} from 'firebase/firestore';
import styles from '../styles/Home.module.css'
import { database } from '../firebaseConfig';
import { useRouter } from 'next/router';
import {
  getAuth,
}from 'firebase/auth';
export default function q2() {
  const [Mtcode, setMcode] = useState("");
  const [teamlist,setteamlist]=useState([]);
  const auth = getAuth();
  const router = useRouter();
  const user = auth.currentUser;
  const teamref=collection(database,"teams")
  const [email, setemail] = useState('');  // Initialize with an empty string
  const [uid, setuid] = useState('');  // Initialize with an empty string

    useEffect(() => {
        const storedemail = sessionStorage.getItem('user.email');
        const storeduid = sessionStorage.getItem('user.uid');
        setemail(storedemail || '');
        setuid(storeduid || '');
    }, []);
  //NEW TRY
  let user_data;
if (email && uid) {
  user_data = doc(database, email, uid);
} else {
  // Handle the case where email or uid is empty
  console.error('Email or UID is empty.');
}
  //NEW TRY
  const getteamlist = async()=>{
    try{
    const data = await getDocs(teamref);
    const filtereddata=data.docs.map((doc)=>({
      ...doc.data(),
      id:doc.id,
    }));
    setteamlist(filtereddata);
    } catch(err){
      console.error(err);
    }
  };
  useEffect(()=>{
    getteamlist();
  },[]);
  
  return (
    <div className={styles.container}>
      <div>
          {teamlist.map((team)=>(
            <div>
              <h1>{team.id}</h1>
              <h1>score:{team.r1mark+team.r2mark+team.r3mark}</h1>
              </div>))
              
          }
        </div>
    </div>
  );
}
